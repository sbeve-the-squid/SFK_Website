<h1>Upcoming Events</h1>
<form action="/addOrUpdateEvent" method="post" class="event-form">
  <% if (eventToEdit) { %>
    <input type="hidden" name="eventId" value="<%= eventToEdit._id %>">
  <% } %>
  <input type="text" name="name" placeholder="Event name"required value="<%= eventToEdit ? eventToEdit.name : '' %>">
  <input type="date" name="date" required value="<%= eventToEdit ? eventToEdit.date : '' %>">
  <input type="text" name="location"placeholder="Location" required value="<%= eventToEdit ? eventToEdit.location : '' %>">
  <div class="dropdown">
    <div id="myDropdown" class="dropdown-content">
        <input type="text" name="originalUserName" placeholder="Assign members..." id="input" onkeyup="filterUsers()">
        <div id="userList"></div> 
    </div>
  </div>
  <input type="hidden" name="userIds" id="userIds">
  <div id="selectedUsers"></div>
  <button type="submit"><%= eventToEdit ? 'Update Event' : 'Add Event' %></button>
</form>

<div class="events-container">
  <% if (events.length === 0) { %>
    <p>No upcoming events.</p>
  <% } else { %>
    <% events.sort((a, b) => new Date(a.date) - new Date(b.date)).forEach(event => { %>
      <div class="event-card">
        <h3><%= event.name %></h3>
        <p><strong>Location:</strong> <%= event.location %></p>
        <p><strong>Date:</strong>
          <% 
            const dateObj = new Date(event.date);
            const mm = String(dateObj.getUTCMonth() + 1).padStart(2, '0');
            const dd = String(dateObj.getUTCDate()).padStart(2, '0');
            const yyyy = dateObj.getUTCFullYear();
          %>
          <%= `${mm}/${dd}/${yyyy}` %>
        </p>
        
        <p><strong>Members:</strong>
          <% if (event.users.length === 0) { %>
            None
          <% } else { %>
            <%= event.users.map(user => user.username).join(", ") %>
          <% } %>
        </p>
        <form action="/events" method="get" style="display:inline;">
          <input type="hidden" name="editId" value="<%= event._id %>">
          <button type="submit">Edit</button>
        </form>
        <form action="/events/<%= event._id %>/delete" method="POST" style="display:inline;">
          <button type="submit" class="btn btn-danger">Delete</button>
        </form>
      </div>
    <% }); %>
  <% } %>
</div>

<script>
//   async function filterUsers() {
//       document.getElementById("userList").style.display = "block";
//       let input = document.getElementById("input");
//       let filter = input.value.toUpperCase();
//       let dropdown = document.getElementById("myDropdown");
//       let links = dropdown.getElementsByTagName("a");

//       let res = await fetch(`/search?q=${filter}`);
// Â Â Â Â Â Â       let users = await res.json();
//       const userListDiv = document.getElementById("userList");
//       userListDiv.innerHTML = "";

//       let previousUserName = null;

//       users.forEach(user => {
//           if (user.username !== previousUserName) { 
//               let a = document.createElement("a");
//               a.textContent = user.username;
//               a.href = "#"; 
//               a.onclick = function() {
//                   document.getElementById("input").value = user.username;
//                   event.preventDefault(); 
//                   selectUser(user.username);
//               };
//               userListDiv.appendChild(a);
//           }
//           previousUserName = user.username; 
//       });
//   }

  async function filterUsers() {
    document.getElementById("userList").style.display = "block";
    const input = document.getElementById("input");
    const filter = input.value.toUpperCase();
    const userListDiv = document.getElementById("userList");

    const res = await fetch(`/search?q=${filter}`);
    const users = await res.json();

    userListDiv.innerHTML = "";

    // ðŸ”½ Assign All Button - Inserted First
    const assignAllBtn = document.createElement("a");
    assignAllBtn.textContent = "Assign to All Members";
    assignAllBtn.href = "#";
    assignAllBtn.onclick = async function(e) {
        e.preventDefault();
        const allRes = await fetch("/search?q="); // Fetch all users
        const allUsers = await allRes.json();
        allUsers.forEach(user => selectedUserIds.add(user._id));
        updateSelectedUsersDisplay();
        userListDiv.style.display = "none";
    };
    userListDiv.appendChild(assignAllBtn);

    // ðŸ”½ Then Add Filtered Users
    users.forEach(user => {
        const a = document.createElement("a");
        a.textContent = user.username;
        a.href = "#";
        a.onclick = function(e) {
            e.preventDefault();
            selectUser(user.username);
        };
        userListDiv.appendChild(a);
    });
}

  async function selectUser(userName) {
      // document.getElementById("userList").style.display = "none";
      // document.getElementById("input").value = userName;  
      let selectedUserIds = new Set(); // To track unique user IDs

    async function selectUser(username) {
      const res = await fetch(`/search?q=${username}`);
      const [user] = await res.json();

      if (user && !selectedUserIds.has(user._id)) {
        selectedUserIds.add(user._id);
        updateSelectedUsersDisplay();
      }

      document.getElementById("input").value = "";
      document.getElementById("userList").style.display = "none";
    }

    function updateSelectedUsersDisplay() {
      const container = document.getElementById("selectedUsers");
      container.innerHTML = "";
      document.getElementById("userIds").value = Array.from(selectedUserIds).join(",");

      selectedUserIds.forEach(id => {
        const div = document.createElement("div");
        div.textContent = id;
        const x = document.createElement("button");
        x.textContent = "x";
        x.onclick = () => {
          selectedUserIds.delete(id);
          updateSelectedUsersDisplay();
        };
        div.appendChild(x);
        container.appendChild(div);
      });
    }

  }
</script>
